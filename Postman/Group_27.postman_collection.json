{
	"info": {
		"_postman_id": "bd4aaccf-5d80-4495-b599-1d6570210344",
		"name": "Group_27",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HW_1",
			"item": [
				{
					"name": "1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/get_method?name={{name}}&age={{age}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}user_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}user_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_1?name={{name}}&age={{age}}&weight={{weight}}",
							"host": [
								"{{url}}object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "weight",
									"value": "{{weight}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_2?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}user_info_2?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}user_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HW_2",
			"item": [
				{
					"name": "test_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "test_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var parsreq = request.data\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"\r",
									"    pm.expect(jsonData.name).to.eql(\"igog\");\r",
									"    pm.expect(jsonData.age).to.eql(\"34\");\r",
									"    pm.expect(jsonData.salary).to.eql(1000)\r",
									"    \r",
									"    pm.expect(jsonData.name).to.eql(parsreq.name);\r",
									"    pm.expect(jsonData.age).to.eql(parsreq.age);\r",
									"    pm.expect(jsonData.salary).to.eql(+parsreq.salary);\r",
									"    console.log(jsonData.family)\r",
									"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(+parsreq.salary * 4);\r",
									"\r",
									"    });   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "igog",
									"type": "text"
								},
								{
									"key": "age",
									"value": "34",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_3",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}",
									"disabled": true
								},
								{
									"key": "age",
									"value": "{{age}}",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "test_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"var parsreq = request.data;\r",
									"\r",
									"pm.test(\"name in resp is equal to name req \", function () {\r",
									"pm.expect(jsonData.name).to.eql(parsreq.name);\r",
									"});\r",
									"pm.test(\"age in resp is equal to age req\", function () {\r",
									"pm.expect(jsonData.age).to.eql(parsreq.age);\r",
									"});\r",
									"pm.test(\"salary in resp equal salary in req\", function () {\r",
									"pm.expect(jsonData.salary).to.eql(+parsreq.salary);\r",
									"});\r",
									"console.log(jsonData.family); // print to the console the parameters family in from the response\r",
									"pm.test(\"the dog parameter has a name parameter\", function () {\r",
									"    \r",
									"pm.expect(jsonData.family.pets.dog).to.have.any.keys('name');\r",
									"});\r",
									"pm.test(\"the dog parameter has a age parameter\", function () {\r",
									"pm.expect(jsonData.family.pets.dog).to.have.any.keys('age');\r",
									"});\r",
									"pm.test(\"name parameter has a value Luky\", function () {\r",
									"pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
									"});\r",
									"pm.test(\"age parameter has a value 4\", function () {\r",
									"pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "test_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var parsreq = request.data;\r",
									"pm.test(\"name in resp is equal to name req \", function () {\r",
									"pm.expect(jsonData.name).to.eql(parsreq.name);\r",
									"});\r",
									"pm.test(\"age in resp is equal to age req\", function () {\r",
									"pm.expect(jsonData.age).to.eql(+parsreq.age);\r",
									"});\r",
									"console.log(parsreq.salary);\r",
									"console.log(jsonData.salary);\r",
									"console.log(jsonData.salary [0]);\r",
									"console.log(jsonData.salary [1]);\r",
									"console.log(jsonData.salary [2]);\r",
									"pm.test(\"salary in resp is equal to salary req\", function () {\r",
									"pm.expect(jsonData.salary [0]).to.eql(+parsreq.salary);\r",
									"});\r",
									"pm.test(\"salary in resp is equal to salary req\", function () {\r",
									"pm.expect(+jsonData.salary [1]).to.eql(+parsreq.salary * 2);\r",
									"});\r",
									"pm.test(\"salary in resp is equal to salary req\", function () {\r",
									"pm.expect(+jsonData.salary [2]).to.eql(+parsreq.salary * 3);\r",
									"});\r",
									"\r",
									"var resp_name = jsonData.name;\r",
									"pm.environment.set(\"name\", resp_name);\r",
									"var resp_age = jsonData.age;\r",
									"pm.environment.set(\"age\", resp_age);\r",
									"let resp_salary = jsonData.salary;\r",
									"pm.environment.set(\"salary\", resp_salary [0]);\r",
									"\r",
									"let i = jsonData.salary;\r",
									"for (; i < 3; i++) {\r",
									"  alert( i )\r",
									"  }\r",
									"  console.log(\"salary = \", i)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Igor'",
									"type": "text"
								},
								{
									"key": "age",
									"value": "34",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "999",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}object_info_4?name={{name}}&age={{age}}&salary=999",
							"host": [
								"{{url}}object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "test_5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0",
			"item": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"    var jsonData = pm.response.json();\r",
							"    var resp_token = jsonData.token;\r",
							"    console.log('token = ' + resp_token)\r",
							"\r",
							"\r",
							"pm.environment.set(\"token\", resp_token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Igor'",
							"type": "text"
						},
						{
							"key": "password",
							"value": "ifgbsdoivn",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": []
		}
	]
}